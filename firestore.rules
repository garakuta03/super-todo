rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // ヘルパー関数: ユーザーが認証済みか確認
    function isAuthenticated() {
      return request.auth != null;
    }

    // ヘルパー関数: ユーザーがドキュメントの所有者か確認
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // ヘルパー関数: 新規作成時のユーザーIDが正しいか確認
    function isValidNewDocument() {
      return request.resource.data.userId == request.auth.uid;
    }

    // ユーザープロファイルのセキュリティルール
    match /users/{userId} {
      // 自分のプロファイルのみ読み書き可能
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false; // プロファイルの削除は不可
    }

    // ワークスペースのセキュリティルール
    match /workspaces/{workspaceId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isValidNewDocument();
      allow update: if isAuthenticated()
                    && isOwner(resource.data.userId)
                    && request.resource.data.userId == resource.data.userId;
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // プロジェクトのセキュリティルール
    match /projects/{projectId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isValidNewDocument();
      allow update: if isAuthenticated()
                    && isOwner(resource.data.userId)
                    && request.resource.data.userId == resource.data.userId;
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // リストのセキュリティルール
    match /lists/{listId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isValidNewDocument();
      allow update: if isAuthenticated()
                    && isOwner(resource.data.userId)
                    && request.resource.data.userId == resource.data.userId;
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // タスクのセキュリティルール
    match /tasks/{taskId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isValidNewDocument();
      allow update: if isAuthenticated()
                    && isOwner(resource.data.userId)
                    && request.resource.data.userId == resource.data.userId;
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // その他のコレクションへのアクセスは拒否
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
